--
-- PostgreSQL database dump
--

-- Dumped from database version 15.3
-- Dumped by pg_dump version 15.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Data for Name: doctrine_migration_versions; Type: TABLE DATA; Schema: public; Owner: app
--

COPY public.doctrine_migration_versions (version, executed_at, execution_time) FROM stdin;
DoctrineMigrations\\Version20230628040712	2023-06-28 04:08:23	10
DoctrineMigrations\\Version20230628041406	2023-06-28 04:15:54	5
\.


--
-- Data for Name: kata; Type: TABLE DATA; Schema: public; Owner: app
--

COPY public.kata (id, name, question, type, created_at, solution) FROM stdin;
9	Reversed sequence 	Build a function that returns an array of integers from n to 1 where ```n>0```.\n\nExample : `n=5` --> `[5,4,3,2,1]`\n\n~~~if:nasm\n*NOTE: In NASM, the function signature is* `int *reverse_seq(int n, size_t *size)` *where the first parameter* `n` *is as described above and the second parameter* `size` *is a pointer to an "out" parameter which should be set to the size of the array your function returns (which should be equal to* `n` *if your implementation is correct).*\n~~~\n\n~~~if:riscv\nRISC-V: The function signature is\n\n```c\nvoid n_to_1(int n, int *arr);\n```\n\nWrite your result to `arr`. You may assume it is large enough to hold the result. You do not need to return anything.\n~~~	easy	2023-06-29 20:50:09	\N
10	Jenny's secret message	Jenny has written a function that returns a greeting for a user. However, she's in love with Johnny, and would like to greet him slightly different. She added a special case to her function, but she made a mistake.\n\nCan you help her?	easy	2023-06-29 20:50:10	\N
11	Pillars	There are pillars near the road. The distance between the pillars is the same and the width of the pillars is the same.\nYour function accepts three arguments:\n1. number of pillars (≥ 1);\n2. distance between pillars (10 - 30 meters);\n3. width of the pillar (10 - 50 centimeters).\n\nCalculate the distance between the first and the last pillar in centimeters (without the width of the first and last pillar).	easy	2023-06-29 20:50:11	\N
12	Calculate average 	Write a function which calculates the average of the numbers in a given list.\n\n**Note:** Empty arrays should return 0.	easy	2023-06-29 20:50:11	\N
13	Beginner Series #1 School Paperwork	Your classmates asked you to copy some paperwork for them. You know that there are 'n' classmates and the paperwork has 'm' pages.\n\nYour task is to calculate how many blank pages do you need. If `n < 0` or `m < 0` return `0`.\n\n\n### Example:\n\n```\nn= 5, m=5: 25\nn=-5, m=5:  0\n```\n\n\nWaiting for translations and Feedback! Thanks!\n	easy	2023-06-29 20:50:12	\N
14	Total amount of points	Our football team has finished the championship.\n\nOur team's match results are recorded in a collection of strings. Each match is represented by a string in the format `"x:y"`, where `x` is our team's score and `y` is our opponents score.\n\nFor example:\n```["3:1", "2:2", "0:1", ...]```\n\nPoints are awarded for each match as follows:\n- if x > y: 3 points (win)\n- if x < y: 0 points (loss)\n- if x = y: 1 point  (tie)\n\nWe need to write a function that takes this collection and returns the number of points our team (`x`) got in the championship by the rules given above.\n\nNotes:\n- our team always plays 10 matches in the championship\n- 0 <= x <= 4\n- 0 <= y <= 4	easy	2023-06-29 20:50:13	\N
15	Keep Hydrated!	Nathan loves cycling. \n\nBecause Nathan knows it is important to stay hydrated, he drinks 0.5 litres of water per hour of cycling.\n\nYou get given the time in hours and you need to return the number of litres Nathan will drink, rounded to the smallest value.\n\nFor example:\n~~~if-not:sql\n```\ntime = 3 ----> litres = 1\n\ntime = 6.7---> litres = 3\n\ntime = 11.8--> litres = 5\n```\n~~~\n~~~if:sql\n```\nhours = 3 ----> liters = 1\n\nhours = 6.7---> liters = 3\n\nhours = 11.8--> liters = 5\n```\n\nInput data is available from the table `cycling`, which has 2 columns: `id` and `hours`. For each row, you have to return 3 columns: `id`, `hours` and `liters` (not litres, it's a difference from the kata description)\n~~~	easy	2023-06-29 20:50:13	\N
16	Is he gonna survive?	A hero is on his way to the castle to complete his mission. However, he's been told that the castle is surrounded with a couple of powerful dragons! each dragon takes 2 bullets to be defeated, our hero has no idea how many bullets he should carry.. Assuming he's gonna grab a specific given number of bullets and move forward to fight another specific given number of dragons, will he survive?\n\nReturn true if yes, false otherwise :)	easy	2023-06-29 20:50:13	\N
17	Is your period late?	In this kata, we will make a function to test whether a period is late.\n\nOur function will take three parameters:\n\nlast - The Date object with the date of the last period\n\ntoday - The Date object with the date of the check\n\ncycleLength - Integer representing the length of the cycle in days\n\n\nReturn true if the number of days passed from last to today is greater than cycleLength. Otherwise, return false.	easy	2023-06-29 20:50:13	\N
18	Return Negative	In this simple assignment you are given a number and have to make it negative. But maybe the number is already negative?\n\n### Examples\n\n``` text\nInput:  1  =>  Output: -1\nInput: -5  =>  Output: -5\nInput:  0  =>  Output:  0\n```\n``` c\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` d\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` cfml\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` csharp\nKata.MakeNegative(1);  // return -1\nKata.MakeNegative(-5); // return -5\nKata.MakeNegative(0);  // return 0\n```\n``` java\nKata.makeNegative(1);  // return -1\nKata.makeNegative(-5); // return -5\nKata.makeNegative(0);  // return 0\n```\n``` crystal\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` r\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` python\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` javascript\nmakeNegative(1);    // return -1\nmakeNegative(-5);   // return -5\nmakeNegative(0);    // return 0\nmakeNegative(0.12); // return -0.12\n```\n``` dart\nmakeNegative(1);    // return -1\nmakeNegative(-5);   // return -5\nmakeNegative(0);    // return 0\nmakeNegative(0.12); // return -0.12\n```\n``` typescript\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` cpp\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` haskell\nmakeNegative    1 -- return -1\nmakeNegative (-5) -- return -5\nmakeNegative    0 -- return 0\nmakeNegative 0.12 -- return -0.12\n```\n``` ruby\nmakeNegative(1);  # return -1\nmakeNegative(-5); # return -5\nmakeNegative(0);  # return 0\n```\n``` coffeescript\nmakeNegative 1    # return -1\nmakeNegative -5   # return -5\nmakeNegative 0    # return 0\n```\n``` elixir\nmake_negative 1    # return -1\nmake_negative -5   # return -5\nmake_negative 0    # return 0\n```\n``` go\nMakeNegative(1)    // return -1\nMakeNegative(-5)   // return -5\nMakeNegative(0)    // return 0\n```\n``` julia\nKata.makenegative(1)  # return -1\nKata.makenegative(-5) # return -5\nKata.makenegative(0)  # return 0\n```\n``` kotlin\nKata().makeNegative(1)  // return -1\nKata().makeNegative(-5) // return -5\nKata().makeNegative(0)  // return 0\n```\n``` nasm\nmake_negative(1);    // return -1\nmake_negative(-5);   // return -5\nmake_negative(0);    // return 0\n```\n``` groovy\nKata.makeNegative(1)    // return -1\nKata.makeNegative(-5)   // return -5\nKata.makeNegative(0)    // return 0\n```\n``` php\nmakeNegative(1)    // return -1\nmakeNegative(-5)   // return -5\nmakeNegative(0)    // return 0\nmakeNegative(0.12) // return -0.12\n```\n``` racket\n(make-negative 1)    ; -1\n(make-negative -5)   ; -5\n(make-negative 0)    ; 0\n(make-negative 0.12) ; -0.12\n```\n``` scala\nNegative.makeNegative(1)  // return -1\nNegative.makeNegative(-5) // return -5\nNegative.makeNegative(0)  // return 0\n```\n``` perl\nKata::make_negative(1)     # return -1\nKata::make_negative(-5)    # return -5\nKata::make_negative(0)     # return 0\nKata::make_negative(0.12); # return -0.12\n```\n``` cobol\n        MAKE-NEGATIVE 1\n      * RESULT = -1\n        MAKE-NEGATIVE -5\n      * RESULT = -5\n        MAKE-NEGATIVE 0\n      * RESULT = 0\n```\n\n### Notes\n\n- The number can be negative already, in which case no change is required.\n- Zero (0) is not checked for any specific sign. Negative zeros make no mathematical sense.\n	easy	2023-06-29 20:50:13	\N
19	Twice as old	Your function takes two arguments:\n1. current father's age (years)\n2. current age of his son (years)\n\nСalculate how many years ago the father was twice as old as his son (or in how many years he will be twice as old). The answer is always greater or equal to 0, no matter if it was in the past or it is in the future.	easy	2023-06-29 20:50:13	\N
20	Expressions Matter 	## Task\n* **_Given_** *three integers* `a` ,`b` ,`c`, **_return_** *the **_largest number_** obtained after inserting the following operators and brackets*: `+`, `*`, `()`\n* In other words , **_try every combination of a,b,c with [*+()] , and return the Maximum Obtained_** <span style="color:red">(Read the notes for more detail about it)</span>\n\n## Example\n\n**_With the numbers are 1, 2 and 3_** , *here are some ways of placing signs and brackets*:\n\n* `1 * (2 + 3) = 5`\n* `1 * 2 * 3 = 6`\n* `1 + 2 * 3 = 7`\n* `(1 + 2) * 3 = 9`\n\nSo **_the maximum value_** that you can obtain is  **_9_**.\n\n\n## Notes \n\n* **_The numbers_** *are always* **_positive_**. \n* **_The numbers_** *are in the range* **_(1  ≤  a, b, c  ≤  10)_**.\n* *You can use the same operation* **_more than once_**.\n* **It's not necessary** *to place all the signs and brackets*.\n* **_Repetition_** *in numbers may occur* .\n* You **_cannot swap the operands_**. For instance, in the given example **_you cannot get expression_** `(1 + 3) * 2 = 8`.\n\n___\n# Input >> Output Examples:\n\n```\nexpressionsMatter(1,2,3)  ==>  return 9\n```\n## **_Explanation_**:\n*After placing signs and brackets, the **_Maximum value_** obtained from the expression* `(1+2) * 3 = 9`.\n___\n\n```\nexpressionsMatter(1,1,1)  ==>  return 3\n```\n## **_Explanation_**:\n*After placing signs, the **_Maximum value_** obtained from the expression is* `1 + 1 + 1 = 3`.\n___\n\n```\nexpressionsMatter(9,1,1)  ==>  return 18\n```\n## **_Explanation_**:\n*After placing signs and brackets, the **_Maximum value_** obtained from the expression is* `9 * (1+1) = 18`.\n___# Task\n* **_Given_** *three integers* `a` ,`b` ,`c`, **_return_** *the **_largest number_** obtained after inserting the following operators and brackets*: `+`, `*`, `()`\n* In other words , **_try every combination of a,b,c with [*+()] , and return the Maximum Obtained_**\n\n## Example\n\n**_With the numbers are 1, 2 and 3_** , *here are some ways of placing signs and brackets*:\n\n* `1 * (2 + 3) = 5`\n* `1 * 2 * 3 = 6`\n* `1 + 2 * 3 = 7`\n* `(1 + 2) * 3 = 9`\n\nSo **_the maximum value_** that you can obtain is  **_9_**.\n\n\n## Notes \n\n* **_The numbers_** *are always* **_positive_**. \n* **_The numbers_** *are in the range* **_(1  ≤  a, b, c  ≤  10)_**.\n* *You can use the same operation* **_more than once_**.\n* **It's not necessary** *to place all the signs and brackets*.\n* **_Repetition_** *in numbers may occur* .\n* You **_cannot swap the operands_**. For instance, in the given example **_you cannot get expression_** `(1 + 3) * 2 = 8`.\n\n___\n# Input >> Output Examples:\n\n```\nexpressionsMatter(1,2,3)  ==>  return 9\n```\n## **_Explanation_**:\n*After placing signs and brackets, the **_Maximum value_** obtained from the expression* `(1+2) * 3 = 9`.\n___\n\n```\nexpressionsMatter(1,1,1)  ==>  return 3\n```\n___\n___\n\n# [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\n# [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\n# [Bizarre Sorting-katas](https://www.codewars.com/collections/bizarre-sorting-katas)\n\n# [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n___\n\n## ALL translations are welcomed\n\n## Enjoy Learning !!\n# Zizou\n	easy	2023-06-29 20:50:13	\N
37	Grasshopper - Summation	# Summation\n\nWrite a program that finds the summation of every number from 1 to num. The number will always be a positive integer greater than 0.\n\nFor example **(Input -> Output)**:\n```\n2 -> 3 (1 + 2)\n8 -> 36 (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8)\n```	easy	2023-06-29 20:50:14	\N
38	Volume of a Cuboid	Bob needs a fast way to calculate the volume of a cuboid with three values: the `length`, `width` and `height` of the cuboid. Write a function to help Bob with this calculation.\n\n```if:shell\nIn bash the script is ran with the following 3 arguments:\n`length` `width` `height`\n```\n	easy	2023-06-29 20:50:14	\N
21	DNA to RNA Conversion	Deoxyribonucleic acid, DNA is the primary information storage molecule in biological systems. It is composed of four nucleic acid bases Guanine ('G'), Cytosine ('C'), Adenine ('A'), and Thymine ('T'). \n\nRibonucleic acid, RNA, is the primary messenger molecule in cells. RNA differs slightly from DNA its chemical structure and contains no Thymine. In RNA Thymine is replaced by another nucleic acid Uracil ('U').\n\nCreate a function which translates a given DNA string into RNA.\n\nFor example:\n\n```\n"GCAT"  =>  "GCAU"\n```\n\nThe input string can be of arbitrary length - in particular, it may be empty.  All input is guaranteed to be valid, i.e. each input string will only ever consist of `'G'`, `'C'`, `'A'` and/or `'T'`.	easy	2023-06-29 20:50:13	\N
22	Returning Strings	~~~if:sql\nWrite a select statement that takes `name` from `person` table and return `"Hello, <name> how are you doing today?"` results in a column named `greeting`\n~~~\n~~~if-not:sql\nMake a function that will return a greeting statement that uses an input; your program should return, `"Hello, <name> how are you doing today?"`.\n~~~\n\n*[Make sure you type the exact thing I wrote or the program may not execute properly]*\n\n	easy	2023-06-29 20:50:13	\N
23	Grasshopper - Check for factor	This function should test if the `factor` is a factor of `base`.\n\nReturn `true` if it is a factor or `false` if it is not.\n\n## About factors\nFactors are numbers you can multiply together to get another number.\n\n2 and 3 are factors of 6 because: `2 * 3 = 6`\n\n- You can find a factor by dividing numbers. If the remainder is 0 then the number is a factor.\n- You can use the mod operator (`%`) in most languages to check for a remainder\n\nFor example 2 is not a factor of 7 because: `7 % 2 = 1`\n\nNote: `base` is a non-negative number, `factor` is a positive number.	easy	2023-06-29 20:50:13	\N
24	Opposite number	Very simple, given an integer or a floating-point number, find its opposite.\n\nExamples:\n```\n1: -1\n14: -14\n-34: 34\n```\n\n~~~if:sql\nYou will be given a table: `opposite`, with a column: `number`. Return a table with a column: `res`.\n~~~\n	easy	2023-06-29 20:50:13	\N
25	Sum of positive	You get an array of numbers, return the sum of all of the positives ones.\n\nExample `[1,-4,7,12]` => `1 + 7 + 12 = 20`\n\nNote: if there is nothing to sum, the sum is default to `0`.\n	easy	2023-06-29 20:50:14	\N
26	Opposites Attract	Timmy & Sarah think they are in love, but around where they live, they will only know once they pick a flower each. If one of the flowers has an even number of petals and the other has an odd number of petals it means they are in love. \n\nWrite a function that will take the number of petals of each flower and return true if they are in love and false if they aren't.	easy	2023-06-29 20:50:14	\N
27	Get the mean of an array	It's the academic year's end, fateful moment of your school report.\nThe averages must be calculated. All the students come to you and entreat you to calculate their average for them.\nEasy ! You just need to write a script.\n\nReturn the average of the given array rounded **down** to its nearest integer.\n\nThe array will never be empty.\n	easy	2023-06-29 20:50:14	\N
28	Is the string uppercase?	# Is the string uppercase?\n\n## Task\n\nCreate a method to see whether the string is ALL CAPS.\n\n### Examples (input -> output)\n\n```\n"c" -> False\n"C" -> True\n"hello I AM DONALD" -> False\n"HELLO I AM DONALD" -> True\n"ACSKLDFJSgSKLDFJSKLDFJ" -> False\n"ACSKLDFJSGSKLDFJSKLDFJ" -> True\n```\n\n\nIn this Kata, a string is said to be in ALL CAPS whenever it does not contain any lowercase letter so any string containing no letters at all is trivially considered to be in ALL CAPS.\n\n~~~if:riscv\nRISC-V: The function signature is\n\n```c\nbool is_uppercase(const char *);\n```\n~~~	easy	2023-06-29 20:50:14	\N
29	Count Odd Numbers below n	Given a number `n`, return the number of positive odd numbers below `n`, EASY!\n\n### Examples (Input -> Output)\n```\n7  -> 3 (because odd numbers below 7 are [1, 3, 5])\n15 -> 7 (because odd numbers below 15 are [1, 3, 5, 7, 9, 11, 13])\n```\n\nExpect large Inputs!\n\n~~~if:lambdacalc\nUse `numEncoding BinaryScott`\n~~~\n~~~if:bf\n\n**Note for Brainfuck:**\n\nInput 5 means the input will be a character with ASCII code 5, not the character '5'. Output similarly.\n\nThe valid input range is 0 <= input <= 127, in order to avoid differences between ASCII and Unicode. You will never have to read more than one byte.\n~~~\n	easy	2023-06-29 20:50:14	\N
30	String repeat	~~~if:bf\nWrite a program which accepts a single byte `n` and then a sequence of bytes `string` and outputs the `string` exactly `n` times.\n\nThe first input byte will be `n`. Following bytes will be characters of `string`. The end of the input `string` will be indicated with a null byte `\\0`.\n\n### Examples:\n\n"\\6I" -> "IIIIII"\n"\\5Hello" -> "HelloHelloHelloHelloHello"\n~~~\n\nWrite a function that accepts an integer `n` and a string `s` as parameters, and returns a string of `s` repeated exactly `n` times.\n\n### Examples (input -> output)\n\n```\n6, "I"     -> "IIIIII"\n5, "Hello" -> "HelloHelloHelloHelloHello"\n```\n	easy	2023-06-29 20:50:14	\N
31	Function 1 - hello world	~~~if:pascal\nMake a simple function called `Greet` that returns the most-famous "hello world!".\n~~~\n~~~if-not:pascal\nMake a simple function called `greet` that returns the most-famous "hello world!".\n~~~\n\n### Style Points\n\nSure, this is about as easy as it gets. But how clever can you be to create the most creative "hello world" you can think of? What is a "hello world" solution you would want to show your friends?\n	easy	2023-06-29 20:50:14	\N
32	Century From Year	### Introduction\n\nThe first century spans from the **year 1** up to *and including* the year 100, the second century - from the year 101 up to *and including* the year 200, etc.\n\n\n### Task\n\nGiven a year, return the century it is in.\n\n\n### Examples\n\n```\n1705 --> 18\n1900 --> 19\n1601 --> 17\n2000 --> 20\n```\n\n```if:sql\nIn SQL, you will be given a table `years` with a column `yr` for the year. Return a table with a column `century`.\n```\n\nNote: this kata uses strict construction as shown in the description and the examples, you can read more about it [here](https://en.wikipedia.org/wiki/Century)	easy	2023-06-29 20:50:14	\N
33	Is n divisible by x and y?	Create a function that checks if a number `n` is divisible by two numbers `x` **AND** `y`. All inputs are positive, non-zero numbers.\n\n```text\nExamples:\n1) n =   3, x = 1, y = 3 =>  true because   3 is divisible by 1 and 3\n2) n =  12, x = 2, y = 6 =>  true because  12 is divisible by 2 and 6\n3) n = 100, x = 5, y = 3 => false because 100 is not divisible by 3\n4) n =  12, x = 7, y = 5 => false because  12 is neither divisible by 7 nor 5\n```\n	easy	2023-06-29 20:50:14	\N
34	Reversed Strings	Complete the solution so that it reverses the string passed into it. \n\n```\n'world'  =>  'dlrow'\n'word'   =>  'drow'\n```	easy	2023-06-29 20:50:14	\N
35	Beginner Series #2 Clock	Clock shows `h` hours, `m` minutes and `s` seconds after midnight.\n\nYour task is to write a function which returns the time since midnight in milliseconds.\n\n## Example:\n\n```\nh = 0\nm = 1\ns = 1\n\nresult = 61000\n```\n\nInput constraints:\n\n* `0 <= h <= 23`\n* `0 <= m <= 59`\n* `0 <= s <= 59`\n\n~~~if:riscv\nRISC-V: The function signature is:\n\n```c\nint past(int h, int m, int s);\n```\n~~~\n	easy	2023-06-29 20:50:14	\N
36	Beginner - Reduce but Grow	Given a non-empty array of integers, return the result of multiplying the values together in order. Example:\n\n```\n[1, 2, 3, 4] => 1 * 2 * 3 * 4 = 24\n```\n	easy	2023-06-29 20:50:14	\N
39	You Can't Code Under Pressure #1	Code as fast as you can! You need to double the integer and return it.	easy	2023-06-29 20:50:14	\N
40	Invert values	Given a set of numbers, return the additive inverse of each. Each positive becomes negatives, and the negatives become positives.\n\n~~~if-not:racket\n```\ninvert([1,2,3,4,5]) == [-1,-2,-3,-4,-5]\ninvert([1,-2,3,-4,5]) == [-1,2,-3,4,-5]\ninvert([]) == []\n```\n~~~\n\n```if:javascript,python,ruby,php,elixir,dart,go\nYou can assume that all values are integers. Do not mutate the input array/list.\n```\n\n```if:c,riscv\n### Notes:\n- All values are greater than `INT_MIN`\n- The input should be modified, not returned.\n```\n~~~if:racket\n```racket\n(invert '(1 2 3 4 5))   ; '(-1 -2 -3 -4 -5)\n(invert '(1 -2 3 -4 5)) ; '(-1 2 -3 4 -5)\n(invert '())            ; '()\n```\n~~~\n\n~~~if:riscv\nRISC-V: The function signature is:\n\n```c\nvoid invert(int *arr, size_t size);\n```\n\nThe input array is `arr` which contains `size` elements. Mutate the array in-place according to the above specification. You do not need to return anything.\n~~~\n	easy	2023-06-29 20:50:14	\N
41	Remove the time	## Task Description\n\nYou're re-designing a blog, and the blog's posts have the `Weekday Month Day, time` format for showing the date and time when a post was made, e.g., `Friday May 2, 7pm`.\n\nYou're running out of screen real estate, and on some pages you want to display a shorter format, `Weekday Month Day` that omits the time.\n\nWrite a function that takes the website date/time in its original string format and returns the shortened format.\n\n## Input\nInput will always be a string, e.g., `"Friday May 2, 7pm"`. \n\n## Output\nOutput will be the shortened string, e.g., `"Friday May 2"`.	easy	2023-06-29 20:50:14	\N
42	Grasshopper - Messi goals function	# Messi goals function\n\n[Messi](https://en.wikipedia.org/wiki/Lionel_Messi) is a soccer player with goals in three leagues: \n\n- LaLiga\n- Copa del Rey\n- Champions\n\nComplete the function to return his total number of goals in all three leagues.\n\nNote: the input will always be valid.\n\nFor example:\n\n```\n5, 10, 2  -->  17\n```\n	easy	2023-06-29 20:50:14	\N
43	Remove First and Last Character	It's pretty straightforward. Your goal is to create a function that removes the first and last characters of a string. You're given one parameter, the original string.  You don't have to worry with strings with less than two characters.	easy	2023-06-29 20:50:14	\N
44	The Feast of Many Beasts	All of the animals are having a feast! Each animal is bringing one dish. There is just one rule: the dish must start and end with the same letters as the animal's name. For example, the great blue heron is bringing garlic naan and the chickadee is bringing chocolate cake.\n\nWrite a function `feast` that takes the animal's name and dish as arguments and returns true or false to indicate whether the beast is allowed to bring the dish to the feast.\n\nAssume that `beast` and `dish` are always lowercase strings, and that each has at least two letters. `beast` and `dish` may contain hyphens and spaces, but these will not appear at the beginning or end of the string. They will not contain numerals.\n	easy	2023-06-29 20:50:14	\N
45	If you can't sleep, just count sheep!!	If you can't sleep, just count sheep!!\n\n## Task:\nGiven a non-negative integer, `3` for example, return a string with a murmur: `"1 sheep...2 sheep...3 sheep..."`.  Input will always be valid, i.e. no negative integers.\n	easy	2023-06-29 20:50:14	\N
46	Find out whether the shape is a cube	To find the volume (centimeters cubed) of a cuboid you use the formula:\n\n```volume = Length * Width * Height```\n    \nBut someone forgot to use proper record keeping, so we only have the volume, and the length of a single side!\n\nIt's up to you to find out whether the cuboid has equal sides (= is a cube).\n\nReturn `true` if the cuboid could have equal sides, return `false` otherwise.\n\nReturn `false` for invalid numbers too (e.g volume or side is less than or equal to 0).\n\nNote: side will be an integer	easy	2023-06-29 20:50:14	\N
47	My head is at the wrong end!	You're at the zoo... all the meerkats look weird. Something has gone terribly wrong - someone has gone and switched their heads and tails around!\n\nSave the animals by switching them back. You will be given an array which will have three values (tail, body, head). It is your job to re-arrange the array so that the animal is the right way round (head, body, tail).\n\n\nSame goes for all the other arrays/lists that you will get in the tests: you have to change the element positions with the same exact logics\n\nSimples!\n\n~~~if:riscv\nRISC-V: The function signature is\n\n```c\nvoid fix_the_meerkat(void *meerkat, size_t size);\n```\n\n`meerkat` is an array of unknown type, but it always has exactly 3 elements (tail, body, head). `size` is the size (in bytes) of each element in the array. Swap the tail and head of `meerkat` in place. You do not need to return anything.\n~~~\n\n	easy	2023-06-29 20:50:14	\N
48	Gravity Flip	If you've completed this kata already and want a bigger challenge, here's the [3D version](https://www.codewars.com/kata/5f849ab530b05d00145b9495/)\n\nBob is bored during his physics lessons so he's built himself a toy box to help pass the time. The box is special because it has the ability to change gravity. \n\nThere are some columns of toy cubes in the box arranged in a line. The `i`-th column contains `a_i` cubes. At first, the gravity in the box is pulling the cubes downwards. When Bob switches the gravity, it begins to pull all the cubes to a certain side of the box, `d`, which can be either `'L'` or `'R'` (left or right). Below is an example of what a box of cubes might look like before and after switching gravity.\n\n```\n+---+                                       +---+\n|   |                                       |   |\n+---+                                       +---+\n+---++---+     +---+              +---++---++---+\n|   ||   |     |   |   -->        |   ||   ||   |\n+---++---+     +---+              +---++---++---+\n+---++---++---++---+         +---++---++---++---+\n|   ||   ||   ||   |         |   ||   ||   ||   |\n+---++---++---++---+         +---++---++---++---+\n```\n\nGiven the initial configuration of the cubes in the box, find out how many cubes are in each of the `n` columns after Bob switches the gravity.\n\n### Examples (input -> output:\n\n```\n* 'R', [3, 2, 1, 2]      ->  [1, 2, 2, 3]\n* 'L', [1, 4, 5, 3, 5 ]  ->  [5, 5, 4, 3, 1]\n```\n	easy	2023-06-29 20:50:14	\N
49	Determine offspring sex based on genes XX and XY chromosomes	The male gametes or sperm cells in humans and other mammals are heterogametic and contain one of two types of sex chromosomes. They are either X or Y. The female gametes or eggs however, contain only the X sex chromosome and are homogametic.\n\nThe sperm cell determines the sex of an individual in this case. If a sperm cell containing an X chromosome fertilizes an egg, the resulting zygote will be XX or female. If the sperm cell contains a Y chromosome, then the resulting zygote will be XY or male.\n\nDetermine if the sex of the offspring will be male or female based on the X or Y chromosome present in the male's sperm.\n\nIf the sperm contains the X chromosome, return "Congratulations! You're going to have a daughter.";\nIf the sperm contains the Y chromosome, return "Congratulations! You're going to have a son.";\n\n	easy	2023-06-29 20:50:14	\N
50	Simple multiplication	This kata is about multiplying a given number by eight if it is an even number and by nine otherwise.	easy	2023-06-29 20:50:14	\N
51	Remove String Spaces	Write a function that removes the spaces from the string, then return the resultant string.\n\nExamples:\n```\nInput -> Output\n"8 j 8   mBliB8g  imjB8B8  jl  B" -> "8j8mBliB8gimjB8B8jlB"\n"8 8 Bi fk8h B 8 BB8B B B  B888 c hl8 BhB fd" -> "88Bifk8hB8BB8BBBB888chl8BhBfd"\n"8aaaaa dddd r     " -> "8aaaaaddddr"\n```\n\n~~~if:bf\nThe input string will be terminated with a null character `\\0`.\n~~~\n~~~if:c,nasm\nFor C and Nasm, you must return a new dynamically allocated string.\n~~~\n	easy	2023-06-29 20:50:14	\N
52	All Star Code Challenge #18	Create a function that accepts a string and a single character, and returns an integer of the count of occurrences the 2nd argument is found in the first one.\n\nIf no occurrences can be found, a count of 0 should be returned.\n\n```\n("Hello", "o")  ==>  1\n("Hello", "l")  ==>  2\n("", "z")       ==>  0\n```\n```c\nstr_count("Hello", 'o'); // returns 1\nstr_count("Hello", 'l'); // returns 2\nstr_count("", 'z'); // returns 0\n```\n```nasm\nstr_count("Hello", 'o'); // returns 1\nstr_count("Hello", 'l'); // returns 2\nstr_count("", 'z'); // returns 0\n```\n\n### Notes\n* The first argument can be an empty string\n* In languages with no distinct character data type, the second argument will be a string of length 1\n	easy	2023-06-29 20:50:14	\N
53	Convert a Boolean to a String	Implement a function which convert the given boolean value into its string representation.\n\nNote: Only valid inputs will be given.\n	easy	2023-06-29 20:50:14	\N
54	Unfinished Loop -  Bug Fixing #1	### Unfinished Loop - Bug Fixing #1\n\nOh no, Timmy's created an infinite loop! Help Timmy find and fix the bug in his unfinished for loop!\n	easy	2023-06-29 20:50:14	\N
55	Quarter of the year	Given a month as an integer from 1 to 12, return to which quarter of the year it belongs as an integer\n number.\n\nFor example: month 2 (February), is part of the first quarter; month 6 (June), is part of the second quarter; and month 11 (November), is part of the fourth quarter.\n\nConstraint:\n* `1 <= month <= 12`	easy	2023-06-29 20:50:14	\N
56	Filter out the geese	Write a function that takes a list of strings as an argument and returns a filtered list containing the same elements but with the 'geese' removed.\n\nThe geese are any strings in the following array, which is pre-populated in your solution:\n\n\n```\n  ["African", "Roman Tufted", "Toulouse", "Pilgrim", "Steinbacher"]\n```\n\nFor example, if this array were passed as an argument:\n\n```\n ["Mallard", "Hook Bill", "African", "Crested", "Pilgrim", "Toulouse", "Blue Swedish"]\n```\n\nYour function would return the following array:\n\n```\n["Mallard", "Hook Bill", "Crested", "Blue Swedish"]\n```\n\nThe elements in the returned array should be in the same order as in the initial array passed to your function, albeit with the 'geese' removed. Note that all of the strings will be in the same case as those provided, and some elements may be repeated.\n	easy	2023-06-29 20:50:14	\N
57	How many lightsabers do you own?	Inspired by the development team at Vooza, write the function that \n\n* accepts the name of a programmer, and\n* returns the number of lightsabers owned by that person.\n\nThe only person who owns lightsabers is Zach, by the way. He owns 18, which is an awesome number of lightsabers. Anyone else owns 0.\n\n```if-not:c,clojure,c#,elixir,haskell,racket,rust\n**Note**: your function should have a default parameter.\n```\n\nFor example(**Input --> Output**):\n```\n"anyone else" --> 0\n"Zach" --> 18\n```\n\n\n\n\n\n	easy	2023-06-29 20:50:14	\N
58	Subtract the Sum	# Subtract the sum\n\n<span style="color:red">_NOTE! This kata can be more difficult than regular 8-kyu katas (lets say 7 or 6 kyu)_</span>\n\n\n\nComplete the function which get an input number `n` such that `n >= 10` and `n < 10000`, then:    \n1. Sum all the digits of `n`.    \n2. Subtract the sum from `n`, and it is your new `n`.    \n3. If the new `n` is in the list below return the associated fruit, otherwise return back to task 1.    \n\n### Example\nn = `325`   \nsum = `3+2+5` = `10`   \nn = `325-10` = `315` (not in the list)    \nsum = `3+1+5` = `9`    \nn = `315-9` = `306` (not in the list)   \nsum = `3+0+6` = `9`   \nn =`306-9` = `297` (not in the list)   \n.   \n.   \n.   \n...until you find the first n in the list below.\n\n\nThere is no preloaded code to help you.\n_This is not about coding skills; think before you code_\n\n\n```\n1-kiwi\n2-pear\n3-kiwi\n4-banana\n5-melon\n6-banana\n7-melon\n8-pineapple\n9-apple\n10-pineapple\n11-cucumber\n12-pineapple\n13-cucumber\n14-orange\n15-grape\n16-orange\n17-grape\n18-apple\n19-grape\n20-cherry\n21-pear\n22-cherry\n23-pear\n24-kiwi\n25-banana\n26-kiwi\n27-apple\n28-melon\n29-banana\n30-melon\n31-pineapple\n32-melon\n33-pineapple\n34-cucumber\n35-orange\n36-apple\n37-orange\n38-grape\n39-orange\n40-grape\n41-cherry\n42-pear\n43-cherry\n44-pear\n45-apple\n46-pear\n47-kiwi\n48-banana\n49-kiwi\n50-banana\n51-melon\n52-pineapple\n53-melon\n54-apple\n55-cucumber\n56-pineapple\n57-cucumber\n58-orange\n59-cucumber\n60-orange\n61-grape\n62-cherry\n63-apple\n64-cherry\n65-pear\n66-cherry\n67-pear\n68-kiwi\n69-pear\n70-kiwi\n71-banana\n72-apple\n73-banana\n74-melon\n75-pineapple\n76-melon\n77-pineapple\n78-cucumber\n79-pineapple\n80-cucumber\n81-apple\n82-grape\n83-orange\n84-grape\n85-cherry\n86-grape\n87-cherry\n88-pear\n89-cherry\n90-apple\n91-kiwi\n92-banana\n93-kiwi\n94-banana\n95-melon\n96-banana\n97-melon\n98-pineapple\n99-apple\n100-pineapple\n\n```\n \n	easy	2023-06-29 20:50:14	\N
59	Remove exclamation marks	Write function RemoveExclamationMarks which removes all exclamation marks from a given string.\n\n	easy	2023-06-29 20:50:14	\N
60	Pythagorean Triple	Given an **unsorted** array of 3 positive integers ```[ n1, n2, n3 ]```, determine if it is possible to form a [Pythagorean Triple](https://en.wikipedia.org/wiki/Pythagorean_triple) using those 3 integers.\n\nA [Pythagorean Triple](https://en.wikipedia.org/wiki/Pythagorean_triple) consists of arranging 3 integers, such that:\n\n**a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup>**\n\n### Examples \n\n[5, 3, 4] : it **is possible** to form a Pythagorean Triple using these 3 integers:\n 3<sup>2</sup> + 4<sup>2</sup> = 5<sup>2</sup>\n \n[3, 4, 5] : it **is possible** to form a Pythagorean Triple using these 3 integers:\n 3<sup>2</sup> + 4<sup>2</sup> = 5<sup>2</sup>\n\n[13, 12, 5] : it **is possible** to form a Pythagorean Triple using these 3 integers:\n 5<sup>2</sup> + 12<sup>2</sup> = 13<sup>2</sup>\n \n[100, 3, 999] : it **is NOT possible** to form a Pythagorean Triple using these 3 integers - no matter how you arrange them, you will never find a way to satisfy the equation a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup>\n\n### Return Values\n\n- For Python: return `True` or `False`\n- For JavaScript: return `true` or `false`\n- Other languages: return `1` or `0` or refer to Sample Tests.\n	easy	2023-06-29 20:50:14	\N
61	Find Maximum and Minimum Values of a List	Your task is to make two functions ( `max` and `min`, or `maximum` and `minimum`, etc., depending on the language ) that receive a list of integers as input, and return the largest and lowest number in that list, respectively.\n\n### Examples (Input -> Output)\n\n```\n* [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134\n* [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56\n* [42, 54, 65, 87, 0]             -> min = 0, max = 87\n* [5]                             -> min = 5, max = 5\n```\n\n### Notes\n\n- You may consider that there will not be any empty arrays/vectors.	easy	2023-06-29 20:50:14	\N
62	Grasshopper - Debug sayHello	## Debugging sayHello function\n\nThe starship Enterprise has run into some problem when creating a program to greet everyone as they come aboard. It is your job to fix the code and get the program working again!\n\nExample output: \n```\nHello, Mr. Spock\n```	easy	2023-06-29 20:50:14	\N
63	Convert a String to a Number!	Note: This kata is inspired by [Convert a Number to a String!](http://www.codewars.com/kata/convert-a-number-to-a-string/). Try that one too.\n\n## Description\n\nWe need a function that can transform a string into a number. What ways of achieving this do you know?\n\nNote: Don't worry, all inputs will be strings, and every string is a perfectly valid representation of an integral number.\n\n## Examples\n```\n"1234" --> 1234\n"605"  --> 605\n"1405" --> 1405\n"-7" --> -7\n```\n\n	easy	2023-06-29 20:50:14	\N
64	Difference of Volumes of Cuboids	In this simple exercise, you will create a program that will take two lists of integers, `a` and `b`. Each list will consist of 3 positive integers above 0, representing the dimensions of cuboids `a` and `b`. You must find the difference of the cuboids' volumes regardless of which is bigger.\n\nFor example, if the parameters passed are `([2, 2, 3], [5, 4, 1])`, the volume of `a` is 12 and the volume of `b` is 20. Therefore, the function should return 8.\n\nYour function will be tested with pre-made examples as well as random ones.\n~~~if-not:cobol\n**If you can, try writing it in one line of code.**\n~~~\n	easy	2023-06-29 20:50:14	\N
65	CSV representation of array	Create a function that returns the CSV representation of a two-dimensional numeric array.\n\nExample: \n```\ninput:\n   [[ 0, 1, 2, 3, 4 ],\n    [ 10,11,12,13,14 ],\n    [ 20,21,22,23,24 ],\n    [ 30,31,32,33,34 ]] \n    \noutput:\n     '0,1,2,3,4\\n'\n    +'10,11,12,13,14\\n'\n    +'20,21,22,23,24\\n'\n    +'30,31,32,33,34'\n```\nArray's length > 2.\n\nMore details here:\nhttps://en.wikipedia.org/wiki/Comma-separated_values	easy	2023-06-29 20:50:14	\N
\.


--
-- Name: kata_id_seq; Type: SEQUENCE SET; Schema: public; Owner: app
--

SELECT pg_catalog.setval('public.kata_id_seq', 65, true);


--
-- PostgreSQL database dump complete
--

